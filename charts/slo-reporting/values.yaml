---
#--------
## Configuration settings
##
config:
  cronjob:
    enabled: true
    # -- The cronjob schedule for running the export-metrics job (default: nightly at 2AM)
    schedule: "@daily"
  #---
  metrics:
    # -- Should SLO reports be generated from configured SLOs
    enabled: true
    prometheus:
      # -- Prometheus URL to query
      url: http://prometheus-community-kube-prometheus.observability:9090
    # -- Evaluation window for SLOs
    window: P1W
    # -- In what granularity (step-size) should SLOs be reported
    step: P1D
    # -- List of SLOs to report on
    slo:
      - name: "prometheus-uptime" # required
        query: 100 * avg(avg_over_time(up{job=~"prometheus.*"}[5m])) # promql, required
        goal: 99.9 # 99.9% uptime, default
        window: P1W # 1 week, default
        step: P1D # 1 day, default
    bucket:
      # -- Path to the archive file
      output: slo-reporting.csv
      # -- Mount path in pod
      path: /app/data
      # -- Type of bucket to use (azure, gcs, s3)
      type: azure
      # -- Azure File Share to store slo reports
      name: slo-reports
      # -- Name of pre-existing Secret for Azure Storage to use
      secretName: slo-reporting
  status:
    # -- Should a status API be created which aggregates alerts from multiple sources?
    enabled: true
    # -- Scrape interval of alert sources
    interval: PT1M
    monitors:
      azure: []
      #  - name: azure
      #    subscription_id: XXXXXX-XXXX-XXXXXX-XXXX-XXXXXX
      prometheus: []
      #  - name: prometheus
      #    url: http://localhost:9090
      #    query: 'ALERTS{alertstate="firing", severity="critical", relevance="health-status"}'
      alertmanager: []
      #  - name: alertmanager
      #    url: http://localhost:9093/api/v2/alerts
      #    filters:
      #      - "receiver=email"
      #      - "severity=critical"
      #      - "relevance=health-status"
      #    active: True
      #    silenced: False
      #    inhibited: False
      #    unprocessed: False

#--------
image:
  repository: ghcr.io/colenio/slo-reporting
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}

serviceAccount:
  create: false
  annotations: {}
  name: ""

resources: {}

# -- Auto scaling via [HPA](https://docs.microsoft.com/en-us/azure/aks/tutorial-kubernetes-scale#autoscale-pods)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  #targetCPUUtilizationPercentage: 80 # Disable cpu metrics since no limit (see above)
  targetMemoryUtilizationPercentage: 80

# -- Networking
service:
  port: 8000
  type: ClusterIP

ingress:
  enabled: false
  className: "" # nginx
  annotations: {}
  hosts: []
  tls: []

metrics:
  enabled: true
  serviceMonitor: # TODO: document
    # -- Enable a [ServiceMonitor](https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#servicemonitorspec)
    enabled: true
    namespace: ""
    additionalLabels: []
    scrapeInterval: 30s
    honorLabels: false
    relabelings: []
    metricRelabelings: []
    jobLabel: ""
    namespaceSelector: {}
    targetLabels: []
